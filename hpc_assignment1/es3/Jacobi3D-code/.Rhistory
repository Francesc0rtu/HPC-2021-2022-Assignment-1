}
hist.scott(v)
A<-rnorm(10,1,4)
v[i]<-sum(A)/10
for(i in 1:B){
A<-rnorm(10,1,4)
v[i]<-sum(A)/10
}
hist.scott(v)
B=100000
v<-rep(1,B)
for(i in 1:B){
A<-rnorm(10,1,4)
v[i]<-sum(A)/10
}
hist.scott(v)
A<-rnorm(10,0,4)
v[i]<-sum(A)/10
for(i in 1:B){
A<-rnorm(10,0,4)
v[i]<-sum(A)/10
}
hist.scott(v)
B=100000
v<-rep(1,B)
for(i in 1:B){
A<-rnorm(10,0,4)
v[i]<-sum(A)/10
}
hist.scott(v)
B=100000
v<-rep(1,B)
for(i in 1:B){
A<-rnorm(100,0,4)
v[i]<-sum(A)/100
}
hist.scott(v)
plot(v,type = "s")
B=100000
v<-rep(1,B)
for(i in 1:B){
A<-rnorm(100,0,4)
v[i]<-sum(A)/100
}
hist.scott(v)
A<-rnorm(1000,0,4)
v[i]<-sum(A)/100
for(i in 1:B){
A<-rnorm(1000,0,4)
v[i]<-sum(A)/100
}
n<-100000
mu_stima<-rep(0,B)
for(i in 1:B){
a<-rnorm(n,mu,sigma)
x[i] <- sum(a[2:n-1])/(n-2)
}
hist.scott(x,xlim = c(4.5,5.5))
abline(v=5,col=2)
library(MASS, lib.loc = "/usr/lib/R/library")
for(i in 1:B){
a<-rnorm(n,mu,sigma)
x[i] <- sum(a[2:n-1])/(n-2)
}
hist.scott(x,xlim = c(4.5,5.5))
abline(v=5,col=2)
B=100000
mu<-5
sigma<-1
n<-100000
mu_stima<-rep(0,B)
for(i in 1:B){
a<-rnorm(n,mu,sigma)
x[i] <- sum(a[2:n-1])/(n-2)
}
hist.scott(x,xlim = c(4.5,5.5))
abline(v=5,col=2)
mu<-5
sigma<-1
n<-10000
mu_stima<-rep(0,B)
for(i in 1:B){
a<-rnorm(n,mu,sigma)
x[i] <- sum(a[2:n-1])/(n-2)
}
n<-1000
mu_stima<-rep(0,B)
for(i in 1:B){
a<-rnorm(n,mu,sigma)
x[i] <- sum(a[2:n-1])/(n-2)
}
B=10000
hist.scott(x,xlim = c(4.5,5.5))
abline(v=5,col=2)
x <- [1,2,3,4,5,6,7,8,9,10]
x <- "1,2,3,4,5,6,7,8,9,10"
x <- c(1,2,3,4,5,6,7,8,9,10)
mean(x>3)
y <- c(4,5,6,7,8,9,10)
mean(y)
mean(x>9)
mean(10)
x <- c(1,2,3,4,5,6,7,8,9,10)
mean(x>9)
mean(10)
x <- c(1,2,3,4,5,6,7,8,9,22)
mean(x>9)
mean(10)
x <- c(1,2,3,4,5,6,7,8,9,22)
mean(x>9)
mean(22)
p_norm=2-2pnorm(z,0,1)
n <- 10
mu <- 2
sigma <- 5
x <- mean(rnorm(n,3,sigma))
#test normalizzato mu=2 vs mu!=2
z=(x-2)/(sigma/sqrt(n))
p_norm=2-2*pnorm(z,0,1)
#test non normalizzato
p=2-2*pnorm(x,mu,sigma/sqrt(n))
p
p_norm
library(MASS, lib.loc = "/usr/lib/R/library")
library(MASS, lib.loc = "/usr/lib/R/library")
sqrt(1.02)
help(pnorm)
help(subset)
View(d)
d<-subset(iris,select = Petal.lenght)
d<-subset(iris,select = Petal.Length)
d<-subset(iris,select = Petal.Length, select = Petal.width)
d<-subset(iris,select = Petal.Length,select =  Petal.Width)
d<-subset(iris,select = c(Petal.Length,  Petal.Width))
View(d)
d<-subset(iris,select = c(Petal.Length,  Petal.Width, Species))
View(d)
help(facto)
help(factor)
for (i in d$Species){
if(i == "virginica" | i == "setosa"){
i <- virs
}
}
for (i in d$Species){
if(i == "virginica" | i == "setosa"){
i <- "virs"
}
}
View(d)
for (i in d){
if(i == "virginica" | i == "setosa"){
i <- "virs"
}
}
for (i in d$Species){
if(i == "virginica"){
i <- "virs"
}
}
View(d)
for (i in d$Species){
i
if(i == "virginica"){
i <- "virs"
}
}
i
d$Species
i<-d$Species[2]
i
library(dplyr)
d$Species <- recode_factor(d$Species, virginica = "virs", setosa = "virs", versicolor = "veriscolor")
View(d)
d$Species
plot(d$Petal.Length,d$Petal.Width, col = d$Species)
help("plot")
plot(d$Petal.Length,d$Petal.Width,pch=20,  col = d$Species)
plot(d$Petal.Length,d$Petal.Width,pch=15,  col = d$Species)
install.packages("e1071")
library(e1071)
gc()
library(e1071)
a <- svm(Species ~., d)
plot(a,d)
a <- svm(Species ~., d)
library(dplyr)
d<-subset(iris,select = c(Petal.Length,  Petal.Width, Species))
d$Species <- recode_factor(d$Species, virginica = "virs", setosa = "virs", versicolor = "veriscolor")
d$Species
library(e1071)
a <- svm(Species ~. , d)
plot(a,d)
rm(list(mu,n,nsim,Q1,Q3))
rm(c(mu,n,nsim,Q1,Q3))
rm(mu
)
rm(n)
rm(nsim)
rm(Q1)
rm(Q3)
rm(rho)
setwd("~/Documents/Repository/Francesc0rtu/hpc_assignment1/es3/Jacobi3D-code")
library(readr)
Results_Jacobi <- read_csv("Results_Jacobi.csv")
View(Results_Jacobi)
library(readr)
Results_Jacobi_GPU <- read_csv("Results_Jacobi_GPU.csv")
View(Results_Jacobi_GPU)
res <- data.frame(Results_Jacobi)
res_gpu <- data.frame(Results_Jacobi_GPU)
res$COMM_TIME <- res$MaxTime-res$JacobiMAX
res
res$MinComTime <- res$MinTime-res$JacobiMIN
res
res$MaxComTime <- res$MaxTime-res$JacobiMAX
res$MinComTime <- res$MinTime-res$JacobiMIN
res
res$COMM_TIME<-NULL
res
res_gpu$MaxComTime <- res_gpu$MaxTime-res_gpu$JacobiMAX
res_gpu$MaxComTime <- res_gpu$MinTime-res_gpu$JacobiMIN
res_gpu
res_gpu$MaxComTime <- res_gpu$MaxTime-res_gpu$JacobiMAX
res_gpu$MinComTime <- res_gpu$MinTime-res_gpu$JacobiMIN
res_gpu
library(gridExtra)
install.packages("gridExtra")
library(grid)
library(gridExtra)
grid.table(res)
res$MaxComTime <- res$MaxTime-res$JacobiMAX
res$MinComTime <- res$MinTime-res$JacobiMIN
grid.table(res)
res
grid.table(res, theme = ttheme_default())
grid.arrange( tableGrob(res, theme = ttheme_default()))
grid.arrange( tableGrob(res, theme = ttheme_minimal()))
grid.arrange( tableGrob(res, theme = tt3 ))
tt3 <- ttheme_minimal(
core=list(bg_params = list(fill = blues9, col=NA),
fg_params=list(fontface=3)),
colhead=list(fg_params=list(col="navyblue")),
rowhead=list(fg_params=list(col="navyblue", fontface=2L)))
grid.arrange( tableGrob(res, theme = tt3 ))
tt3 <- ttheme_default(
core=list(bg_params = list(fill = blues9, col=NA),
fg_params=list(fontface=3)),
colhead=list(fg_params=list(col="navyblue")),
rowhead=list(fg_params=list(col="navyblue", fontface=2L)))
grid.arrange( tableGrob(res, theme = tt3 ))
tt3 <- ttheme_default(
core=list(bg_params = list(fill = blues9, col=NA)),
colhead=list(fg_params=list(col="navyblue")),
rowhead=list(fg_params=list(col="navyblue", fontface=2L)))
grid.arrange( tableGrob(res, theme = tt3 ))
tt3 <- ttheme_default(
core=list(bg_params = list(col = "red")),
colhead=list(fg_params=list(col="navyblue")),
rowhead=list(fg_params=list(col="navyblue", fontface=2L)))
grid.arrange( tableGrob(res, theme = tt3 ))
tt3 <- ttheme_default(
core=list(bg_params = list(col = "blue")),
colhead=list(fg_params=list(col="navyblue")),
rowhead=list(fg_params=list(col="navyblue", fontface=2L)))
grid.arrange( tableGrob(res, theme = tt3 ))
tt3 <- ttheme_default(
core=list(bg_params = list( fill="navyblue", col = "blue")),
colhead=list(fg_params=list(col="navyblue")),
rowhead=list(fg_params=list(col="navyblue", fontface=2L)))
grid.arrange( tableGrob(res, theme = tt3 ))
tt3 <- ttheme_default(
core=list(bg_params = list( fill="lightblue", col = "blue")),
colhead=list(fg_params=list(col="navyblue")),
rowhead=list(fg_params=list(col="navyblue", fontface=2L)))
grid.arrange( tableGrob(res, theme = tt3 ))
help("ttheme_default")
tt3 <- ttheme_default(base_colour = "red")
grid.arrange( tableGrob(res, theme = tt3 ))
tt3 <- ttheme_default(base_colour = "navyblue")
grid.arrange( tableGrob(res, theme = tt3 ))
tt3 <- ttheme_default(base_colour = "black")
grid.arrange( tableGrob(res, theme = tt3 ))
tt3 <- ttheme_default(base_colour = "black", core = list(fill = c("blue", "navyblue")))
grid.arrange( tableGrob(res, theme = tt3 ))
tt3 <- ttheme_default( core = list(fill = c("blue", "navyblue")))
grid.arrange( tableGrob(res, theme = tt3 ))
tt3 <- ttheme_default( core = list(bg_params = list(fill = c("blue", "navyblue"))))
grid.arrange( tableGrob(res, theme = tt3 ))
tt3 <- ttheme_default( core = list(bg_params = list(fill = c("lightblue", "blue"))))
grid.arrange( tableGrob(res, theme = tt3 ))
tt3 <- ttheme_default( core = list(bg_params = list(fill = blues9[1:2]))
grid.arrange( tableGrob(res, theme = tt3 ))
tt3 <- ttheme_default( core = list(bg_params = list(fill = blues9[1:2])))
grid.arrange( tableGrob(res, theme = tt3 ))
tt3 <- ttheme_default( core = list(bg_params = list(fill = red9[1:2])))
tt3 <- ttheme_default( core = list(bg_params = list(fill =c( "lightsalmon1", "lightsalmon2")))
tt3 <- ttheme_default( core = list(bg_params = list(fill =c( "lightsalmon1", "lightsalmon2"))))
tt3 <- ttheme_default( core = list(bg_params = list(fill =c( "lightsalmon1", "lightsalmon2"))))
grid.arrange( tableGrob(res, theme = tt3 ))
tt3 <- ttheme_default( core = list(bg_params = list(fill =c( "sienna1", "sienna3"))))
grid.arrange( tableGrob(res, theme = tt3 ))
tt3 <- ttheme_default( core = list(bg_params = list(fill =c( "coral", "coral1"))))
grid.arrange( tableGrob(res, theme = tt3 ))
tt3 <- ttheme_default( core = list(bg_params = list(fill =bles9[1:2])))
tt3 <- ttheme_default( core = list(bg_params = list(fill =blues9[1:2])))
grid.arrange( tableGrob(res, theme = tt3 ))
grid.arrange( tableGrob(res_gpu, theme = tt3 ))
library(ggplot2)
library(tidyverse)
library(RColorBrewer)
#
perf <- ggplot()+
geom_point(data = res, aes(x=res$NProc, y=res$MLUPs, color = res$MAP))
perf
#
perf <- ggplot()+
geom_point(data = res, aes(x=as.factor(res$NProc), y=res$MLUPs, color = res$MAP))
perf
#
perf <- ggplot()+
geom_point(data = res, aes(x=as.factor(res$NProc), y=res$MLUPs, point.shape = res$MAP))
help("aes")
#
perf <- ggplot()+
geom_point(data = res, aes(x=as.factor(res$NProc), y=res$MLUPs, shape = res$MAP))
perf
#
perf <- ggplot()+
geom_point(data = res, aes(x=as.factor(res$NProc), y=res$MLUPs, shape = res$MAP)) +
scale_shape_manual(values = c(20,4,17))
perf
#
perf <- ggplot()+
geom_point(data = res, aes(x=as.factor(NProc), y=MLUPs, shape = MAP)) +
scale_shape_manual(values = c(20,4,17))
perf
#
perf <- ggplot()+
geom_point(data = res[1:9], aes(x=as.factor(NProc), y=MLUPs, shape = MAP)) +
scale_shape_manual(values = c(20,4,17))
perf
#
perf <- ggplot()+
geom_point(data = res[1:5], aes(x=as.factor(NProc), y=MLUPs, shape = MAP)) +
scale_shape_manual(values = c(20,4,17))
perf
#
perf <- ggplot()+
geom_point(data = res[,1:9], aes(x=as.factor(NProc), y=MLUPs, shape = MAP)) +
scale_shape_manual(values = c(20,4,17))
perf
#
perf <- ggplot()+
geom_point(data = res[,1:3], aes(x=as.factor(NProc), y=MLUPs, shape = MAP)) +
scale_shape_manual(values = c(20,4,17))
perf
res[,1:3]
res[1:3,]
#
perf <- ggplot()+
geom_point(data = res[1:9,], aes(x=as.factor(NProc), y=MLUPs, shape = MAP)) +
scale_shape_manual(values = c(20,4,17))
perf
#
perf <- ggplot()+
geom_point(data = res[1:8,], aes(x=as.factor(NProc), y=MLUPs, shape = MAP)) +
scale_shape_manual(values = c(20,4,17))
perf
#
perf <- ggplot()+
geom_point(data = res, aes(x=as.factor(NProc), y=MLUPs, shape = MAP)) +
scale_shape_manual(values = c(20,4,17))
#
perf <- ggplot()+
geom_point(data = res, aes(x=as.factor(NProc), y=MLUPs, shape = MAP)) +
geom_point(data = res_gpu, aes(x=as.factor(NProc), y=MLUPs, shape = MAP)) +
scale_shape_manual(values = c(20,4,17))
perf
#
perf <- ggplot()+
geom_point(data = res, aes(x=as.factor(NProc), y=MLUPs, shape = MAP, color = "thin")) +
geom_point(data = res_gpu, aes(x=as.factor(NProc), y=MLUPs, shape = MAP, color = "gpu")) +
scale_shape_manual(values = c(20,4,17))
perf
#
perf <- ggplot()+
geom_point(data = res, aes(x=as.factor(NProc), y=MLUPs, shape = MAP, color = "thin")) +
geom_point(data = res_gpu, aes(x=as.factor(NProc), y=MLUPs, shape = MAP, color = "gpu")) +
scale_shape_manual(values = c(20,4,17))+
labs(x="Number of Processor", y = "MLUPs")
perf
#
perf <- ggplot()+
geom_point(data = res, aes(x=as.factor(NProc), y=MLUPs, shape = MAP, color = "thin")) +
geom_point(data = res_gpu, aes(x=as.factor(NProc), y=MLUPs, shape = MAP, color = "gpu")) +
scale_shape_manual(values = c(20,4,17))+
labs(x="Proc Num", y = "MLUPs")
perf
time <- ggplot()+
geom_point(data = res, aes(x=as.factor(NProc), y=MaxTime, shape = MAP, color = "thin")) +
geom_point(data = res_gpu, aes(x=as.factor(NProc), y=MaxTime, shape = MAP, color = "gpu")) +
scale_shape_manual(values = c(20,4,17))+
labs(x="Proc Num", y = "MLUPs")
time
time <- ggplot()+
geom_point(data = res, aes(x=as.factor(NProc), y=MaxTime, shape = MAP, color = "thin")) +
geom_point(data = res_gpu, aes(x=as.factor(NProc), y=MaxTime, shape = MAP, color = "gpu")) +
scale_shape_manual(values = c(20,4,17))+
labs(x="Proc Num", y = "second")
time
time <- ggplot()+
geom_point(data = res, aes(x=as.factor(NProc), y=MaxTime, shape = MAP, color = "thin")) +
geom_point(data = res_gpu, aes(x=as.factor(NProc), y=MaxTime, shape = MAP, color = "gpu")) +
geom_line(data = res, aes(x=as.factor(NProc), y=MaxTime, shape = MAP, color = "thin")) +
geom_line(data = res_gpu, aes(x=as.factor(NProc), y=MaxTime, shape = MAP, color = "gpu")) +
scale_shape_manual(values = c(20,4,17))+
labs(x="Proc Num", y = "second")
time <- ggplot()+
geom_point(data = res, aes(x=as.factor(NProc), y=MaxTime, shape = MAP, color = "thin")) +
geom_point(data = res_gpu, aes(x=as.factor(NProc), y=MaxTime, shape = MAP, color = "gpu")) +
geom_line(data = res, aes(x=as.factor(NProc), y=MaxTime, color = "thin")) +
geom_line(data = res_gpu, aes(x=as.factor(NProc), y=MaxTime, color = "gpu")) +
scale_shape_manual(values = c(20,4,17))+
labs(x="Proc Num", y = "second")
time
time <- ggplot()+
geom_point(data = res, aes(x=as.factor(NProc), y=MaxTime, shape = MAP, color = "thin")) +
geom_point(data = res_gpu, aes(x=as.factor(NProc), y=MaxTime, shape = MAP, color = "gpu")) +
geom_line(data = res, aes(x=as.factor(NProc), y=MaxTime, color = "thin")) +
geom_line(data = res_gpu, aes(x=as.factor(NProc), y=MaxTime, color = "gpu")) +
scale_shape_manual(values = c(20,4,17))+
labs(x="Proc Num", y = "second")
time
time <- ggplot()+
geom_point(data = res, aes(x=as.factor(NProc), y=MaxTime, shape = MAP, color = "thin")) +
geom_point(data = res_gpu, aes(x=as.factor(NProc), y=MaxTime, shape = MAP, color = "gpu")) +
geom_line(data = res, aes(x=as.factor(NProc), y=MaxTime, color = "thin")) +
geom_line(data = res_gpu, aes(x=as.factor(NProc), y=MaxTime, color = "gpu")) +
scale_shape_manual(values = c(20,4,17))+
labs(x="Proc Num", y = "second")
time <- ggplot()+
# geom_point(data = res, aes(x=as.factor(NProc), y=MaxTime, shape = MAP, color = "thin")) +
#geom_point(data = res_gpu, aes(x=as.factor(NProc), y=MaxTime, shape = MAP, color = "gpu")) +
geom_line(data = res, aes(x=as.factor(NProc), y=MaxTime, color = "thin")) +
geom_line(data = res_gpu, aes(x=as.factor(NProc), y=MaxTime, color = "gpu")) +
scale_shape_manual(values = c(20,4,17))+
labs(x="Proc Num", y = "second")
time
time <- ggplot()+
# geom_point(data = res, aes(x=as.factor(NProc), y=MaxTime, shape = MAP, color = "thin")) +
#geom_point(data = res_gpu, aes(x=as.factor(NProc), y=MaxTime, shape = MAP, color = "gpu")) +
geom_line(data = res, aes(x=as.factor(NProc),group = 1, y=MaxTime, color = "thin")) +
geom_line(data = res_gpu, aes(x=as.factor(NProc), y=MaxTime, color = "gpu")) +
scale_shape_manual(values = c(20,4,17))+
labs(x="Proc Num", y = "second")
time
time <- ggplot()+
# geom_point(data = res, aes(x=as.factor(NProc), y=MaxTime, shape = MAP, color = "thin")) +
#geom_point(data = res_gpu, aes(x=as.factor(NProc), y=MaxTime, shape = MAP, color = "gpu")) +
geom_line(data = res, aes(x=as.factor(NProc),group = 1, y=MaxTime, color = "thin")) +
geom_line(data = res_gpu, aes(x=as.factor(NProc), group=2 y=MaxTime, color = "gpu")) +
scale_shape_manual(values = c(20,4,17))+
labs(x="Proc Num", y = "second")
time <- ggplot()+
# geom_point(data = res, aes(x=as.factor(NProc), y=MaxTime, shape = MAP, color = "thin")) +
#geom_point(data = res_gpu, aes(x=as.factor(NProc), y=MaxTime, shape = MAP, color = "gpu")) +
geom_line(data = res, aes(x=as.factor(NProc),group = 1, y=MaxTime, color = "thin")) +
geom_line(data = res_gpu, aes(x=as.factor(NProc), group=2, y=MaxTime, color = "gpu")) +
scale_shape_manual(values = c(20,4,17))+
labs(x="Proc Num", y = "second")
time
time <- ggplot()+
geom_point(data = res, aes(x=as.factor(NProc), y=MaxTime, shape = MAP, color = "thin")) +
geom_point(data = res_gpu, aes(x=as.factor(NProc), y=MaxTime, shape = MAP, color = "gpu")) +
geom_line(data = res, aes(x=as.factor(NProc),group = 1, y=MaxTime, color = "thin")) +
geom_line(data = res_gpu, aes(x=as.factor(NProc), group=2, y=MaxTime, color = "gpu")) +
scale_shape_manual(values = c(20,4,17))+
labs(x="Proc Num", y = "second")
time
comm_time <- ggplot()+
geom_point(data = res, aes(x=as.factor(NProc), y=MaxComTime, shape = MAP, color = "thin")) +
geom_point(data = res_gpu, aes(x=as.factor(NProc), y=MaxComTime, shape = MAP, color = "gpu")) +
geom_line(data = res, aes(x=as.factor(NProc),group = 1, y=MaxComTime, color = "thin")) +
geom_line(data = res_gpu, aes(x=as.factor(NProc), group=2, y=MaxComTime, color = "gpu")) +
scale_shape_manual(values = c(20,4,17))+
labs(x="Proc Num", y = "second")
comm_time
comm_time <- ggplot()+
geom_point(data = res, aes(x=as.factor(NProc), y=MaxComTime, shape = MAP, color = "thin")) +
geom_point(data = res_gpu, aes(x=as.factor(NProc), y=MaxComTime, shape = MAP, color = "gpu")) +
#geom_line(data = res, aes(x=as.factor(NProc),group = 1, y=MaxComTime, color = "thin")) +
#geom_line(data = res_gpu, aes(x=as.factor(NProc), group=2, y=MaxComTime, color = "gpu")) +
scale_shape_manual(values = c(20,4,17))+
labs(x="Proc Num", y = "second")
comm_time
comm_time <- ggplot()+
geom_point(data = res[2:8,], aes(x=as.factor(NProc), y=MaxComTime, shape = MAP, color = "thin")) +
geom_point(data = res_gpu, aes(x=as.factor(NProc), y=MaxComTime, shape = MAP, color = "gpu")) +
#geom_line(data = res, aes(x=as.factor(NProc),group = 1, y=MaxComTime, color = "thin")) +
#geom_line(data = res_gpu, aes(x=as.factor(NProc), group=2, y=MaxComTime, color = "gpu")) +
scale_shape_manual(values = c(20,4,17))+
labs(x="Proc Num", y = "second")
comm_time
comm_time <- ggplot()+
geom_point(data = res[2:8,], aes(x=as.factor(NProc), y=MaxComTime, shape = MAP, color = "thin")) +
geom_point(data = res_gpu[2:8,], aes(x=as.factor(NProc), y=MaxComTime, shape = MAP, color = "gpu")) +
#geom_line(data = res, aes(x=as.factor(NProc),group = 1, y=MaxComTime, color = "thin")) +
#geom_line(data = res_gpu, aes(x=as.factor(NProc), group=2, y=MaxComTime, color = "gpu")) +
scale_shape_manual(values = c(20,4,17))+
labs(x="Proc Num", y = "second")
comm_time
